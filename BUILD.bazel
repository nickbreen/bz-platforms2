load("@rules_pkg//pkg:rpm.bzl", "pkg_rpm")
load("@rules_pkg//pkg:deb.bzl", "pkg_deb")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_files")
load(":defs.bzl", "platforms", "platforms_test")
load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_binary(
    name = "hello",
    srcs = ["hello.c"],
)

platforms(
    name = "hellos",
    actual = ":hello",
    exec_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
    target_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
)

# Will execute on the host and test all executables
sh_test(
    name = "hellos-test",
    srcs = ["hello.test.sh"],
    args = ["$(rootpaths :hellos)"],
    data = [":hellos"],
)

pkg_files(
    name = "pkg/hello",
    srcs = [":hello"],
    attributes = pkg_attributes(
        mode = "0555",
    ),
    prefix = "usr/local/bin",
)

sh_test(
    name = "hello-test",
    srcs = ["hello.test.sh"],
    args = ["$(rootpath :hello)"],
    data = [":hello"],
)

platforms_test(
    name = "hello-test-suite",
    platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
    test = ":hello-test",
)

pkg_tar(
    name = "tar",
    srcs = [":pkg/hello"],
)

platforms(
    name = "tars",
    actual = ":tar",
    exec_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
    target_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
)

genrule(
    name = "check-tars",
    srcs = [":tars"],
    outs = ["tars.txt"],
    cmd = """
    set $(SRCS)
    for hello
    do
        tar xf $$hello -C $(RULEDIR)
        echo -ne "$$hello\t"
        $(RULEDIR)/usr/local/bin/hello
    done | tee $@
    """,
)

pkg_rpm(
    name = "rpm",
    package_name = "hello",
    srcs = [":pkg/hello"],
    architecture = "x86_64",
    description = "Hello GLIBC",
    license = "MIT",
    release = "0",  # redhat family will need a el6/7/8/9 constraint to switch this on
    requires = ["glibc"],
    spec_template = "//toolchains/rpmbuild:template.spec.tpl",  # because RPM's suck
    summary = "Hello GLIBC",
    version = "0",
)

platforms(
    name = "rpms",
    actual = ":rpm",
    exec_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
    ],
    target_platforms = [
        "//platforms:centos/6",
        "//platforms:centos/7",
        "//platforms:fedora/37",
        "//platforms:fedora/38",
        "//platforms:rockylinux/8",
        "//platforms:rockylinux/9",
    ],
)

pkg_deb(
    name = "deb",
    data = ":tar",
    depends = ["libc6"],
    description = "Hello GLIBC",
    maintainer = "glibc@example.com",
    package = "hello",
    version = "0",
)

platforms(
    name = "debs",
    actual = ":deb",
    exec_platforms = [
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
    target_platforms = [
        "//platforms:debian/11",
        "//platforms:debian/12",
        "//platforms:ubuntu/kinetic",
        "//platforms:ubuntu/lunar",
    ],
)
