load("@rules_pkg//pkg:rpm.bzl", "pkg_rpm")
load("@rules_pkg//pkg:deb.bzl", "pkg_deb")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_files")
load(":defs.bzl", "platforms")
load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_binary(
    name = "hello",
    srcs = ["hello.c"],
)

platforms(
    name = "hellos",
    actual = ":hello",
)

genrule(
    name = "check-hellos",
    srcs = [":hellos"],
    outs = ["hellos.txt"],
    cmd = """
    set $(SRCS)
    objdump -T "$$@"
    for hello
    do
        echo -ne "$$hello\t"
        $$hello || echo "Non-zero exit $$?"
    done | tee $@
    """,
)

pkg_files(
    name = "opt/hello",
    srcs = [":hello"],
    attributes = pkg_attributes(
        mode = "0755",
    ),
    prefix = "/usr/local/bin",
)

pkg_tar(
    name = "tar",
    srcs = [":opt/hello"],
    target_compatible_with = select({
        "//platforms/family:redhat": ["//platforms/family:redhat"],
        "//platforms/family:debian": ["//platforms/family:debian"],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
)

platforms(
    name = "tars",
    actual = ":tar",
)

genrule(
    name = "check-tars",
    srcs = [":tars"],
    outs = ["tars.txt"],
    cmd = """
    set $(SRCS)
    for hello
    do
        tar xf $$hello -C $(RULEDIR)
        echo -ne "$$hello\t"
        $(RULEDIR)/usr/local/bin/hello
    done | tee $@
    """,
)

pkg_rpm(
    name = "rpm",
    package_name = "hello",
    srcs = [":opt/hello"],
    description = "Hello GLIBC",
    exec_compatible_with = ["//platforms/family:redhat"],
    license = "MIT",
    release = "0",
    requires = ["glibc"],
    summary = "Hello GLIBC",
    target_compatible_with = ["//platforms/family:redhat"],
    version = "0",
)

platforms(
    name = "rpms",
    actual = ":rpm",
)

pkg_deb(
    name = "deb",
    data = ":tar",
    depends = ["libc6"],
    description = "Hello GLIBC",
    exec_compatible_with = ["//platforms/family:debian"],
    maintainer = "glibc@example.com",
    package = "hello",
    target_compatible_with = ["//platforms/family:debian"],
    version = "0",
)

platforms(
    name = "debs",
    actual = ":deb",
)
