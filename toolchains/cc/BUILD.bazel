load("@rules_cc//cc:defs.bzl", "cc_toolchain")
load("@bazel_tools//tools/cpp:unix_cc_toolchain_config.bzl", "cc_toolchain_config")

# The bazel documentation for configuration of C toolchains is voluminous but
# general. Most examples have "local" or "unknown" set for several attributes
# without explanation. The following cc_toolchain_config and cc_toolchain rules
# are possibly over-specified and could be collapsed somewhat. Some values are
# apparently mandatory yet ignored (e.g. host_system_name).

# All of the following common chunks have been yoinked from @local_config_cc
# on Ubuntu/jammy except where commented.
tool_paths = {
    "ar": "/usr/bin/ar",
    "ld": "/usr/bin/ld",
    "llvm-cov": "/usr/bin/llvm-cov",
    "llvm-profdata": "/usr/bin/llvm-profdata",
    "cpp": "/usr/bin/cpp",
    "gcc": "/usr/bin/gcc",
    "dwp": "/usr/bin/dwp",
    "gcov": "/usr/bin/gcov",
    "nm": "/usr/bin/nm",
    "objcopy": "/usr/bin/objcopy",
    "objdump": "/usr/bin/objdump",
    "strip": "/usr/bin/strip",
}

compile_flags = [
    "-std=c99",  # implicit return 0 from main
    "-fstack-protector",
    "-Wall",
    "-Wunused-but-set-parameter",
    "-Wno-free-nonheap-object",
    "-fno-omit-frame-pointer",
]

opt_compile_flags = [
    "-g0",
    "-O2",
    "-D_FORTIFY_SOURCE=1",
    "-DNDEBUG",
    "-ffunction-sections",
    "-fdata-sections",
]

dbg_compile_flags = ["-g"]

cxx_flags = ["-std=c++0x"]

link_flags = [
    "-fuse-ld=gold",
    "-Wl,-no-as-needed",
    "-Wl,-z,relro,-z,now",
    "-B/usr/bin",
    "-pass-exit-codes",
]

link_libs = [
    #    "-lstdc++",
    #    "-lm",
]

opt_link_flags = ["-Wl,--gc-sections"]

# None of these toolchains are hermetic as far as bazel is concerned, so we need
# and empty set of files to provide to the cc_toolchain rule.
filegroup(name = "exec-platform-provided")

# While these are named for OS/version they are actually just
# the combinations of GCC and GLIBC available on each of those OS/versions.

# Family constraints are included as redhat family OS's and debian family OS's
# have different GCC include paths.

# Note that these are resolved for platform a platform by matching constraints.
# Which means that as long they match it's a candidate toolchain. E.g.
#    "@platforms//cpu:x86_64", "@platforms//os:linux",
#    "//platforms/family:*", "//platforms/glibc:*", "//platforms/gcc:*"

# C toolchains - vary gcc/glibc versions and include paths by platform.
# We need to define each platform's specific combination of GNU C version and
# GNU libc version.
cc_toolchain_config(
    name = "config/centos/6",
    abi_libc_version = "local",
    abi_version = "glibc-2.12",
    compile_flags = compile_flags,
    compiler = "gcc-4.4.7",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/4.4.4/include",
        "/usr/lib/gcc/x86_64-redhat-linux/4.4.7/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.12",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_centos_6",
)

cc_toolchain(
    name = "cc/centos/6",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/centos/6",
    toolchain_identifier = "cc_centos_6",
)

toolchain(
    name = "centos/6",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.12",
        "//platforms/gcc:4.4.7",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.12",
        "//platforms/gcc:4.4.7",
    ],
    toolchain = ":cc/centos/6",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/centos/7",
    abi_libc_version = "local",
    abi_version = "glibc-2.17",
    compile_flags = compile_flags,
    compiler = "gcc-4.8.5",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/4.8.2/include",
        "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.17",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_centos_7",
)

cc_toolchain(
    name = "cc/centos/7",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/centos/7",
    toolchain_identifier = "cc_centos_7",
)

toolchain(
    name = "centos/7",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.17",
        "//platforms/gcc:4.8.5",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.17",
        "//platforms/gcc:4.8.5",
    ],
    toolchain = ":cc/centos/7",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/rockylinux/8",
    abi_libc_version = "glibc-2.28",
    abi_version = "gcc-8.5.0",
    compile_flags = compile_flags,
    compiler = "gcc-8.5.0",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/8/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.28",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_rockylinux_8",
)

cc_toolchain(
    name = "cc/rockylinux/8",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/rockylinux/8",
    toolchain_identifier = "cc_rockylinux_8",
)

toolchain(
    name = "rockylinux/8",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.28",
        "//platforms/gcc:8.5.0",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.28",
        "//platforms/gcc:8.5.0",
    ],
    toolchain = ":cc/rockylinux/8",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/rockylinux/9",
    abi_libc_version = "glibc-2.34",
    abi_version = "gcc-11.3.1",
    compile_flags = compile_flags,
    compiler = "gcc-11.3.1",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/11/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.34",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_rockylinux_9",
)

cc_toolchain(
    name = "cc/rockylinux/9",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/rockylinux/9",
    toolchain_identifier = "cc_rockylinux_9",
)

toolchain(
    name = "rockylinux/9",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.34",
        "//platforms/gcc:11.3.1",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.34",
        "//platforms/gcc:11.3.1",
    ],
    toolchain = ":cc/rockylinux/9",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/fedora/37",
    abi_libc_version = "glibc-2.36",
    abi_version = "gcc-12.3.1",
    compile_flags = compile_flags,
    compiler = "gcc-12.3.1",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/12/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.36",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_fedora_37",
)

cc_toolchain(
    name = "cc/fedora/37",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/fedora/37",
    toolchain_identifier = "cc_fedora_37",
)

toolchain(
    name = "fedora/37",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.36",
        "//platforms/gcc:12.3.1",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.36",
        "//platforms/gcc:12.3.1",
    ],
    toolchain = ":cc/fedora/37",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/fedora/38",
    abi_libc_version = "glibc-2.37",
    abi_version = "gcc-13.1.1",
    compile_flags = compile_flags,
    compiler = "gcc-13.1.1",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-redhat-linux/13/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.37",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_fedora_38",
)

cc_toolchain(
    name = "cc/fedora/38",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/fedora/38",
    toolchain_identifier = "cc_fedora_38",
)

toolchain(
    name = "fedora/38",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.37",
        "//platforms/gcc:13.2.1",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:redhat",
        "//platforms/glibc:2.37",
        "//platforms/gcc:13.2.1",
    ],
    toolchain = ":cc/fedora/38",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/debian/11",
    abi_libc_version = "glibc-2.31",
    abi_version = "gcc-10.2.1",
    compile_flags = compile_flags,
    compiler = "gcc-10.2.1",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-linux-gnu/10/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.31",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_debian_11",
)

cc_toolchain(
    name = "cc/debian/11",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/debian/11",
    toolchain_identifier = "cc_debian_11",
)

toolchain(
    name = "debian/11",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.31",
        "//platforms/gcc:10.2.1",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.31",
        "//platforms/gcc:10.2.1",
    ],
    toolchain = ":cc/debian/11",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/debian/12",
    abi_libc_version = "glibc-2.36",
    abi_version = "gcc-12.2.0",
    compile_flags = compile_flags,
    compiler = "gcc-12.2.0",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-linux-gnu/12/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.36",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_debian_12",
)

cc_toolchain(
    name = "cc/debian/12",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/debian/12",
    toolchain_identifier = "cc_debian_12",
)

toolchain(
    name = "debian/12",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.36",
        "//platforms/gcc:12.2.0",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.36",
        "//platforms/gcc:12.2.0",
    ],
    toolchain = ":cc/debian/12",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/ubuntu/focal",
    abi_libc_version = "glibc-2.31",
    abi_version = "gcc-9.4.0",
    compile_flags = compile_flags,
    compiler = "gcc-9.4.0",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-linux-gnu/9/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.31",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_ubuntu_focal",
)

cc_toolchain(
    name = "cc/ubuntu/focal",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/ubuntu/focal",
    toolchain_identifier = "cc_ubuntu_focal",
)

toolchain(
    name = "ubuntu/focal",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.31",
        "//platforms/gcc:9.4.0",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.31",
        "//platforms/gcc:9.4.0",
    ],
    toolchain = ":cc/ubuntu/focal",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

cc_toolchain_config(
    name = "config/ubuntu/jammy",
    abi_libc_version = "glibc-2.35",
    abi_version = "gcc-11.4.0",
    compile_flags = compile_flags,
    compiler = "gcc-11.4.0",
    cpu = "k8",
    cxx_builtin_include_directories = [
        "/usr/include",
        "/usr/lib/gcc/x86_64-linux-gnu/11/include",
    ],
    cxx_flags = cxx_flags,
    dbg_compile_flags = dbg_compile_flags,
    host_system_name = "linux-gnu",
    link_flags = link_flags,
    link_libs = link_libs,
    opt_compile_flags = opt_compile_flags,
    opt_link_flags = opt_link_flags,
    target_libc = "glibc-2.35",
    target_system_name = "linux-gnu",
    tool_paths = tool_paths,
    toolchain_identifier = "k8_ubuntu_jammy",
)

cc_toolchain(
    name = "cc/ubuntu/jammy",
    all_files = ":exec-platform-provided",
    compiler_files = ":exec-platform-provided",
    dwp_files = ":exec-platform-provided",
    linker_files = ":exec-platform-provided",
    objcopy_files = ":exec-platform-provided",
    strip_files = ":exec-platform-provided",
    toolchain_config = ":config/ubuntu/jammy",
    toolchain_identifier = "cc_ubuntu_jammy",
)

toolchain(
    name = "ubuntu/jammy",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.35",
        "//platforms/gcc:11.4.0",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
        "//platforms/family:debian",
        "//platforms/glibc:2.35",
        "//platforms/gcc:11.4.0",
    ],
    toolchain = ":cc/ubuntu/jammy",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)
